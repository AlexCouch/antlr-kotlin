// Generated from java-escape by ANTLR 4.7.1
package me.tomassetti.minicalc
import com.strumenta.kotlinmultiplatform.Arrays
import org.antlr.v4.runtime.misc.Utils
import org.antlr.v4.kotlinruntime.CharStream
import org.antlr.v4.kotlinruntime.Lexer
import org.antlr.v4.kotlinruntime.VocabularyImpl
import org.antlr.v4.kotlinruntime.atn.ATN
import org.antlr.v4.kotlinruntime.atn.ATNDeserializer
import org.antlr.v4.kotlinruntime.atn.LexerATNSimulator
import org.antlr.v4.kotlinruntime.atn.PredictionContextCache
import org.antlr.v4.kotlinruntime.dfa.DFA

class creoleLexer(val input: CharStream) : Lexer(input) {
	// TODO Verify the runtime version is correct

    override val ruleNames: Array<String>?
        get() = Rules.values().map { it.name }.toTypedArray()

    override val grammarFileName: String
        get() = "creole.g4"

    override val atn: ATN
		get() = creoleLexer.Companion.ATN

	companion object {
		val decisionToDFA : Array<DFA>
		val sharedContextCache = PredictionContextCache()

		private val LITERAL_NAMES = Arrays.asList<String?>(null, "'\\\\'", "'**'", 
		                                                   "'|'", "'----'", "'*'", 
		                                                   "'|='", "'='", "'#'", 
		                                                   "'[['", "']]'", "'{{'", 
		                                                   "'}}'", null, null, 
		                                                   null, null, "'/'")
		private val SYMBOLIC_NAMES = Arrays.asList<String?>(null, null, null, 
		                                                    null, null, null, 
		                                                    null, null, "HASH", 
		                                                    "LBRACKET", "RBRACKET", 
		                                                    "LBRACE", "RBRACE", 
		                                                    "TEXT", "WS", "CR", 
		                                                    "NOWIKI", "RSLASH")

		val VOCABULARY = VocabularyImpl(LITERAL_NAMES.toTypedArray(), SYMBOLIC_NAMES.toTypedArray())

        val tokenNames: Array<String?> = Array<String?>(SYMBOLIC_NAMES.size) {
            var el = VOCABULARY.getLiteralName(it)
            if (el == null) {
                el = VOCABULARY.getSymbolicName(it)
            }

            if (el == null) {
                el = "<INVALID>"
            }
            el
        }

		private const val serializedATN : String = "\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\u0002\u0013\u0074\u0008\u0001\u0004\u0002\u0009\u0002\u0004\u0003\u0009\u0003\u0004\u0004\u0009\u0004\u0004\u0005\u0009\u0005\u0004\u0006\u0009\u0006\u0004\u0007\u0009\u0007\u0004\u0008\u0009\u0008\u0004\u0009\u0009\u0009\u0004\u000a\u0009\u000a\u0004\u000b\u0009\u000b\u0004\u000c\u0009\u000c\u0004\u000d\u0009\u000d\u0004\u000e\u0009\u000e\u0004\u000f\u0009\u000f\u0004\u0010\u0009\u0010\u0004\u0011\u0009\u0011\u0004\u0012\u0009\u0012\u0004\u0013\u0009\u0013\u0004\u0014\u0009\u0014\u0004\u0015\u0009\u0015\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0008\u0003\u0008\u0003\u0009\u0003\u0009\u0003\u000a\u0003\u000a\u0003\u000a\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000c\u0003\u000c\u0003\u000c\u0003\u000d\u0003\u000d\u0003\u000d\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0006\u000e\u0052\u000a\u000e\u000d\u000e\u000e\u000e\u0053\u0003\u000f\u0003\u000f\u0003\u0010\u0005\u0010\u0059\u000a\u0010\u0003\u0010\u0003\u0010\u0005\u0010\u005d\u000a\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0007\u0011\u0064\u000a\u0011\u000c\u0011\u000e\u0011\u0067\u000b\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0065\u0002\u0016\u0003\u0003\u0005\u0004\u0007\u0005\u0009\u0006\u000b\u0007\u000d\u0008\u000f\u0009\u0011\u000a\u0013\u000b\u0015\u000c\u0017\u000d\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011\u0021\u0012\u0023\u0013\u0025\u0002\u0027\u0002\u0029\u0002\u0003\u0002\u0006\u0004\u0002\u000b\u000b\u0022\u0022\u0004\u0002\u0043\u005c\u0063\u007c\u0003\u0002\u0032\u003b\u0008\u0002\u0024\u0024\u0029\u002b\u002d\u0030\u003c\u003d\u005e\u005e\u0080\u0080\u0002\u0077\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\u0009\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\u000d\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002\u0021\u0003\u0002\u0002\u0002\u0002\u0023\u0003\u0002\u0002\u0002\u0003\u002b\u0003\u0002\u0002\u0002\u0005\u002e\u0003\u0002\u0002\u0002\u0007\u0031\u0003\u0002\u0002\u0002\u0009\u0033\u0003\u0002\u0002\u0002\u000b\u0038\u0003\u0002\u0002\u0002\u000d\u003a\u0003\u0002\u0002\u0002\u000f\u003d\u0003\u0002\u0002\u0002\u0011\u003f\u0003\u0002\u0002\u0002\u0013\u0041\u0003\u0002\u0002\u0002\u0015\u0044\u0003\u0002\u0002\u0002\u0017\u0047\u0003\u0002\u0002\u0002\u0019\u004a\u0003\u0002\u0002\u0002\u001b\u0051\u0003\u0002\u0002\u0002\u001d\u0055\u0003\u0002\u0002\u0002\u001f\u005c\u0003\u0002\u0002\u0002\u0021\u005e\u0003\u0002\u0002\u0002\u0023\u006c\u0003\u0002\u0002\u0002\u0025\u006e\u0003\u0002\u0002\u0002\u0027\u0070\u0003\u0002\u0002\u0002\u0029\u0072\u0003\u0002\u0002\u0002\u002b\u002c\u0007\u005e\u0002\u0002\u002c\u002d\u0007\u005e\u0002\u0002\u002d\u0004\u0003\u0002\u0002\u0002\u002e\u002f\u0007\u002c\u0002\u0002\u002f\u0030\u0007\u002c\u0002\u0002\u0030\u0006\u0003\u0002\u0002\u0002\u0031\u0032\u0007\u007e\u0002\u0002\u0032\u0008\u0003\u0002\u0002\u0002\u0033\u0034\u0007\u002f\u0002\u0002\u0034\u0035\u0007\u002f\u0002\u0002\u0035\u0036\u0007\u002f\u0002\u0002\u0036\u0037\u0007\u002f\u0002\u0002\u0037\u000a\u0003\u0002\u0002\u0002\u0038\u0039\u0007\u002c\u0002\u0002\u0039\u000c\u0003\u0002\u0002\u0002\u003a\u003b\u0007\u007e\u0002\u0002\u003b\u003c\u0007\u003f\u0002\u0002\u003c\u000e\u0003\u0002\u0002\u0002\u003d\u003e\u0007\u003f\u0002\u0002\u003e\u0010\u0003\u0002\u0002\u0002\u003f\u0040\u0007\u0025\u0002\u0002\u0040\u0012\u0003\u0002\u0002\u0002\u0041\u0042\u0007\u005d\u0002\u0002\u0042\u0043\u0007\u005d\u0002\u0002\u0043\u0014\u0003\u0002\u0002\u0002\u0044\u0045\u0007\u005f\u0002\u0002\u0045\u0046\u0007\u005f\u0002\u0002\u0046\u0016\u0003\u0002\u0002\u0002\u0047\u0048\u0007\u007d\u0002\u0002\u0048\u0049\u0007\u007d\u0002\u0002\u0049\u0018\u0003\u0002\u0002\u0002\u004a\u004b\u0007\u007f\u0002\u0002\u004b\u004c\u0007\u007f\u0002\u0002\u004c\u001a\u0003\u0002\u0002\u0002\u004d\u0052\u0005\u0025\u0013\u0002\u004e\u0052\u0005\u0027\u0014\u0002\u004f\u0052\u0005\u0029\u0015\u0002\u0050\u0052\u0005\u001d\u000f\u0002\u0051\u004d\u0003\u0002\u0002\u0002\u0051\u004e\u0003\u0002\u0002\u0002\u0051\u004f\u0003\u0002\u0002\u0002\u0051\u0050\u0003\u0002\u0002\u0002\u0052\u0053\u0003\u0002\u0002\u0002\u0053\u0051\u0003\u0002\u0002\u0002\u0053\u0054\u0003\u0002\u0002\u0002\u0054\u001c\u0003\u0002\u0002\u0002\u0055\u0056\u0009\u0002\u0002\u0002\u0056\u001e\u0003\u0002\u0002\u0002\u0057\u0059\u0007\u000f\u0002\u0002\u0058\u0057\u0003\u0002\u0002\u0002\u0058\u0059\u0003\u0002\u0002\u0002\u0059\u005a\u0003\u0002\u0002\u0002\u005a\u005d\u0007\u000c\u0002\u0002\u005b\u005d\u0007\u0002\u0002\u0003\u005c\u0058\u0003\u0002\u0002\u0002\u005c\u005b\u0003\u0002\u0002\u0002\u005d\u0020\u0003\u0002\u0002\u0002\u005e\u005f\u0007\u007d\u0002\u0002\u005f\u0060\u0007\u007d\u0002\u0002\u0060\u0061\u0007\u007d\u0002\u0002\u0061\u0065\u0003\u0002\u0002\u0002\u0062\u0064\u000b\u0002\u0002\u0002\u0063\u0062\u0003\u0002\u0002\u0002\u0064\u0067\u0003\u0002\u0002\u0002\u0065\u0066\u0003\u0002\u0002\u0002\u0065\u0063\u0003\u0002\u0002\u0002\u0066\u0068\u0003\u0002\u0002\u0002\u0067\u0065\u0003\u0002\u0002\u0002\u0068\u0069\u0007\u007f\u0002\u0002\u0069\u006a\u0007\u007f\u0002\u0002\u006a\u006b\u0007\u007f\u0002\u0002\u006b\u0022\u0003\u0002\u0002\u0002\u006c\u006d\u0007\u0031\u0002\u0002\u006d\u0024\u0003\u0002\u0002\u0002\u006e\u006f\u0009\u0003\u0002\u0002\u006f\u0026\u0003\u0002\u0002\u0002\u0070\u0071\u0009\u0004\u0002\u0002\u0071\u0028\u0003\u0002\u0002\u0002\u0072\u0073\u0009\u0005\u0002\u0002\u0073\u002a\u0003\u0002\u0002\u0002\u0008\u0002\u0051\u0053\u0058\u005c\u0065\u0002"

		val ATN = ATNDeserializer().deserialize(serializedATN.toCharArray())
		init {
			decisionToDFA = Array<DFA>(ATN.numberOfDecisions, {
				DFA(ATN.getDecisionState(it)!!, it)
			})


		}
	}

    enum class Tokens(val id: Int) {
	    T__0(1),
	    T__1(2),
	    T__2(3),
	    T__3(4),
	    T__4(5),
	    T__5(6),
	    T__6(7),
	    HASH(8),
	    LBRACKET(9),
	    RBRACKET(10),
	    LBRACE(11),
	    RBRACE(12),
	    TEXT(13),
	    WS(14),
	    CR(15),
	    NOWIKI(16),
	    RSLASH(17)
    }

	enum class Channels(val id: Int) {
		DEFAULT_TOKEN_CHANNEL(0),
		HIDDEN(1),
	}

	enum class Modes(val id: Int) {
		DEFAULT_MODE(0),
	}

	enum class Rules {
	    T__0,
	    T__1,
	    T__2,
	    T__3,
	    T__4,
	    T__5,
	    T__6,
	    HASH,
	    LBRACKET,
	    RBRACKET,
	    LBRACE,
	    RBRACE,
	    TEXT,
	    WS,
	    CR,
	    NOWIKI,
	    RSLASH,
	    LETTERS,
	    DIGITS,
	    SYMBOL
	}


	init {
		this.interpreter = LexerATNSimulator(this, ATN, decisionToDFA as Array<DFA?>, sharedContextCache)
	}

}